{
	"name": "LPC",
	"scopeName": "source.lpc",
	"fileTypes": ["c", "h"],
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#types"
		},
		{
			"include": "#variables"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.lpc",
					"match": "//.*$"
				},
				{
					"name": "comment.block.lpc",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.lpc",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.lpc",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.lpc",
					"match": "\\b(if|else|while|for|do|switch|case|default|break|continue|return|foreach)\\b"
				},
				{
					"name": "keyword.other.lpc",
					"match": "\\b(inherit|private|protected|public|static|nomask|varargs)\\b"
				}
			]
		},
		"types": {
			"patterns": [
				{
					"name": "storage.type.lpc",
					"match": "\\b(void|int|string|object|array|mapping|float|buffer|mixed|function|class|struct)\\b"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"name": "entity.name.function.lpc",
					"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\("
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.other.lpc",
					"match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
				}
			]
		}
	}
}