// Generated from grammar/LPCLexer.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class LPCLexer extends Lexer {
	public static readonly INTEGER = 1;
	public static readonly FLOAT = 2;
	public static readonly CHAR_LITERAL = 3;
	public static readonly STRING_LITERAL = 4;
	public static readonly HEREDOC_START = 5;
	public static readonly ARRAY_DELIMITER_START = 6;
	public static readonly HEREDOC_END = 7;
	public static readonly ARRAY_DELIMITER_END = 8;
	public static readonly WS = 9;
	public static readonly LINE_COMMENT = 10;
	public static readonly BLOCK_COMMENT = 11;
	public static readonly DIRECTIVE = 12;
	public static readonly IF = 13;
	public static readonly ELSE = 14;
	public static readonly FOR = 15;
	public static readonly WHILE = 16;
	public static readonly DO = 17;
	public static readonly SWITCH = 18;
	public static readonly CASE = 19;
	public static readonly DEFAULT = 20;
	public static readonly BREAK = 21;
	public static readonly CONTINUE = 22;
	public static readonly RETURN = 23;
	public static readonly FOREACH = 24;
	public static readonly INHERIT = 25;
	public static readonly INCLUDE = 26;
	public static readonly CATCH = 27;
	public static readonly REF = 28;
	public static readonly IN = 29;
	public static readonly KW_INT = 30;
	public static readonly KW_FLOAT = 31;
	public static readonly KW_STRING = 32;
	public static readonly KW_OBJECT = 33;
	public static readonly KW_MIXED = 34;
	public static readonly KW_MAPPING = 35;
	public static readonly KW_FUNCTION = 36;
	public static readonly KW_BUFFER = 37;
	public static readonly KW_VOID = 38;
	public static readonly KW_STRUCT = 39;
	public static readonly KW_CLASS = 40;
	public static readonly KW_NEW = 41;
	public static readonly ELLIPSIS = 42;
	public static readonly RANGE_OP = 43;
	public static readonly ARROW = 44;
	public static readonly DOT = 45;
	public static readonly INC = 46;
	public static readonly DEC = 47;
	public static readonly PLUS_ASSIGN = 48;
	public static readonly MINUS_ASSIGN = 49;
	public static readonly STAR_ASSIGN = 50;
	public static readonly DIV_ASSIGN = 51;
	public static readonly PERCENT_ASSIGN = 52;
	public static readonly PLUS = 53;
	public static readonly MINUS = 54;
	public static readonly STAR = 55;
	public static readonly DIV = 56;
	public static readonly PERCENT = 57;
	public static readonly SCOPE = 58;
	public static readonly SEMI = 59;
	public static readonly COMMA = 60;
	public static readonly LPAREN = 61;
	public static readonly RPAREN = 62;
	public static readonly LBRACE = 63;
	public static readonly RBRACE = 64;
	public static readonly LBRACK = 65;
	public static readonly RBRACK = 66;
	public static readonly QUESTION = 67;
	public static readonly COLON = 68;
	public static readonly DOLLAR = 69;
	public static readonly GT = 70;
	public static readonly LT = 71;
	public static readonly GE = 72;
	public static readonly LE = 73;
	public static readonly EQ = 74;
	public static readonly NE = 75;
	public static readonly ASSIGN = 76;
	public static readonly NOT = 77;
	public static readonly AND = 78;
	public static readonly OR = 79;
	public static readonly SHIFT_LEFT = 80;
	public static readonly SHIFT_RIGHT = 81;
	public static readonly BIT_AND = 82;
	public static readonly BIT_OR = 83;
	public static readonly BIT_XOR = 84;
	public static readonly BIT_NOT = 85;
	public static readonly BIT_OR_ASSIGN = 86;
	public static readonly BIT_AND_ASSIGN = 87;
	public static readonly MODIFIER = 88;
	public static readonly PARAMETER_PLACEHOLDER = 89;
	public static readonly Identifier = 90;
	public static readonly LPC_HEREDOC = 1;
	public static readonly LPC_ARRAY_DELIMITER = 2;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE", "LPC_HEREDOC", "LPC_ARRAY_DELIMITER",
	];

	public static readonly ruleNames: string[] = [
		"NL", "INTEGER", "FLOAT", "DecimalLiteral", "FloatLiteral", "HexLiteral", 
		"OctLiteral", "BinLiteral", "CHAR_LITERAL", "STRING_LITERAL", "HEREDOC_TAG", 
		"HEREDOC_START", "ARRAY_DELIMITER_START", "HEREDOC_END", "HEREDOC_CHARS", 
		"ARRAY_DELIMITER_END", "ARRAY_DELIMITER_CHARS", "WS", "LINE_COMMENT", 
		"BLOCK_COMMENT", "DIRECTIVE", "IF", "ELSE", "FOR", "WHILE", "DO", "SWITCH", 
		"CASE", "DEFAULT", "BREAK", "CONTINUE", "RETURN", "FOREACH", "INHERIT", 
		"INCLUDE", "CATCH", "REF", "IN", "KW_INT", "KW_FLOAT", "KW_STRING", "KW_OBJECT", 
		"KW_MIXED", "KW_MAPPING", "KW_FUNCTION", "KW_BUFFER", "KW_VOID", "KW_STRUCT", 
		"KW_CLASS", "KW_NEW", "ELLIPSIS", "RANGE_OP", "ARROW", "DOT", "INC", "DEC", 
		"PLUS_ASSIGN", "MINUS_ASSIGN", "STAR_ASSIGN", "DIV_ASSIGN", "PERCENT_ASSIGN", 
		"PLUS", "MINUS", "STAR", "DIV", "PERCENT", "SCOPE", "SEMI", "COMMA", "LPAREN", 
		"RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", "QUESTION", "COLON", 
		"DOLLAR", "GT", "LT", "GE", "LE", "EQ", "NE", "ASSIGN", "NOT", "AND", 
		"OR", "SHIFT_LEFT", "SHIFT_RIGHT", "BIT_AND", "BIT_OR", "BIT_XOR", "BIT_NOT", 
		"BIT_OR_ASSIGN", "BIT_AND_ASSIGN", "MODIFIER", "PARAMETER_PLACEHOLDER", 
		"Identifier",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, "'if'", 
		"'else'", "'for'", "'while'", "'do'", "'switch'", "'case'", "'default'", 
		"'break'", "'continue'", "'return'", "'foreach'", "'inherit'", "'include'", 
		"'catch'", "'ref'", "'in'", "'int'", "'float'", "'string'", "'object'", 
		"'mixed'", "'mapping'", "'function'", "'buffer'", "'void'", "'struct'", 
		"'class'", "'new'", "'...'", "'..'", "'->'", "'.'", "'++'", "'--'", "'+='", 
		"'-='", "'*='", "'/='", "'%='", "'+'", "'-'", "'*'", "'/'", "'%'", "'::'", 
		"';'", "','", "'('", "')'", "'{'", "'}'", "'['", "']'", "'?'", "':'", 
		"'$'", "'>'", "'<'", "'>='", "'<='", "'=='", "'!='", "'='", "'!'", "'&&'", 
		"'||'", "'<<'", "'>>'", "'&'", "'|'", "'^'", "'~'", "'|='", "'&='",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "INTEGER", "FLOAT", "CHAR_LITERAL", "STRING_LITERAL", "HEREDOC_START", 
		"ARRAY_DELIMITER_START", "HEREDOC_END", "ARRAY_DELIMITER_END", "WS", "LINE_COMMENT", 
		"BLOCK_COMMENT", "DIRECTIVE", "IF", "ELSE", "FOR", "WHILE", "DO", "SWITCH", 
		"CASE", "DEFAULT", "BREAK", "CONTINUE", "RETURN", "FOREACH", "INHERIT", 
		"INCLUDE", "CATCH", "REF", "IN", "KW_INT", "KW_FLOAT", "KW_STRING", "KW_OBJECT", 
		"KW_MIXED", "KW_MAPPING", "KW_FUNCTION", "KW_BUFFER", "KW_VOID", "KW_STRUCT", 
		"KW_CLASS", "KW_NEW", "ELLIPSIS", "RANGE_OP", "ARROW", "DOT", "INC", "DEC", 
		"PLUS_ASSIGN", "MINUS_ASSIGN", "STAR_ASSIGN", "DIV_ASSIGN", "PERCENT_ASSIGN", 
		"PLUS", "MINUS", "STAR", "DIV", "PERCENT", "SCOPE", "SEMI", "COMMA", "LPAREN", 
		"RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", "QUESTION", "COLON", 
		"DOLLAR", "GT", "LT", "GE", "LE", "EQ", "NE", "ASSIGN", "NOT", "AND", 
		"OR", "SHIFT_LEFT", "SHIFT_RIGHT", "BIT_AND", "BIT_OR", "BIT_XOR", "BIT_NOT", 
		"BIT_OR_ASSIGN", "BIT_AND_ASSIGN", "MODIFIER", "PARAMETER_PLACEHOLDER", 
		"Identifier",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(LPCLexer._LITERAL_NAMES, LPCLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return LPCLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	    /** 动态保存 heredoc 结束标记，例如 "LONG" */
	    private heredocTag: string = "";


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(LPCLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "LPCLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return LPCLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return LPCLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return LPCLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return LPCLexer.modeNames; }

	// @Override
	public action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void {
		switch (ruleIndex) {
		case 11:
			this.HEREDOC_START_action(_localctx, actionIndex);
			break;

		case 12:
			this.ARRAY_DELIMITER_START_action(_localctx, actionIndex);
			break;

		case 13:
			this.HEREDOC_END_action(_localctx, actionIndex);
			break;

		case 15:
			this.ARRAY_DELIMITER_END_action(_localctx, actionIndex);
			break;
		}
	}
	private HEREDOC_START_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 0:

			            this.heredocTag = this.text.substring(1).trim();
			            this.type = LPCLexer.STRING_LITERAL;
			            this.pushMode(LPCLexer.LPC_HEREDOC);
			        
			break;
		}
	}
	private ARRAY_DELIMITER_START_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 1:

			            this.heredocTag = this.text.substring(2).trim();
			            this.pushMode(LPCLexer.LPC_ARRAY_DELIMITER);
			        
			break;
		}
	}
	private HEREDOC_END_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 2:

			            if (this.text.trim() === this.heredocTag) {
			                this.popMode();
			                this.skip();
			            } else {
			                this.more();
			            }
			        
			break;
		}
	}
	private ARRAY_DELIMITER_END_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 3:

			            if (this.text.replace(';', '').trim() === this.heredocTag) {
			                this.popMode();
			            } else {
			                this.more();
			            }
			        
			break;
		}
	}

	private static readonly _serializedATNSegments: number = 2;
	private static readonly _serializedATNSegment0: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\\\u02E9\b\x01" +
		"\b\x01\b\x01\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04" +
		"\x06\t\x06\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f" +
		"\t\f\x04\r\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11" +
		"\x04\x12\t\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16" +
		"\x04\x17\t\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B" +
		"\x04\x1C\t\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!" +
		"\t!\x04\"\t\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t" +
		")\x04*\t*\x04+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x04" +
		"2\t2\x043\t3\x044\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04" +
		";\t;\x04<\t<\x04=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04" +
		"D\tD\x04E\tE\x04F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x04K\tK\x04L\tL\x04" +
		"M\tM\x04N\tN\x04O\tO\x04P\tP\x04Q\tQ\x04R\tR\x04S\tS\x04T\tT\x04U\tU\x04" +
		"V\tV\x04W\tW\x04X\tX\x04Y\tY\x04Z\tZ\x04[\t[\x04\\\t\\\x04]\t]\x04^\t" +
		"^\x04_\t_\x04`\t`\x04a\ta\x04b\tb\x04c\tc\x04d\td\x03\x02\x05\x02\xCD" +
		"\n\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x05\x03\xD5\n\x03" +
		"\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x07\x05\xDC\n\x05\f\x05\x0E\x05" +
		"\xDF\v\x05\x05\x05\xE1\n\x05\x03\x06\x06\x06\xE4\n\x06\r\x06\x0E\x06\xE5" +
		"\x03\x06\x03\x06\x06\x06\xEA\n\x06\r\x06\x0E\x06\xEB\x03\x06\x03\x06\x06" +
		"\x06\xF0\n\x06\r\x06\x0E\x06\xF1\x05\x06\xF4\n\x06\x03\x07\x03\x07\x03" +
		"\x07\x06\x07\xF9\n\x07\r\x07\x0E\x07\xFA\x03\b\x03\b\x06\b\xFF\n\b\r\b" +
		"\x0E\b\u0100\x03\t\x03\t\x03\t\x06\t\u0106\n\t\r\t\x0E\t\u0107\x03\n\x03" +
		"\n\x03\n\x03\n\x05\n\u010E\n\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x07" +
		"\v\u0116\n\v\f\v\x0E\v\u0119\v\v\x03\v\x03\v\x03\f\x03\f\x07\f\u011F\n" +
		"\f\f\f\x0E\f\u0122\v\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03" +
		"\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x07\x0F\u0132\n\x0F" +
		"\f\x0F\x0E\x0F\u0135\v\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03" +
		"\x10\x03\x11\x03\x11\x03\x11\x07\x11\u0140\n\x11\f\x11\x0E\x11\u0143\v" +
		"\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x06\x13\u014C" +
		"\n\x13\r\x13\x0E\x13\u014D\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03" +
		"\x14\x07\x14\u0156\n\x14\f\x14\x0E\x14\u0159\v\x14\x03\x14\x03\x14\x03" +
		"\x15\x03\x15\x03\x15\x03\x15\x07\x15\u0161\n\x15\f\x15\x0E\x15\u0164\v" +
		"\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x07\x16\u016D" +
		"\n\x16\f\x16\x0E\x16\u0170\v\x16\x03\x16\x03\x16\x05\x16\u0174\n\x16\x03" +
		"\x16\x03\x16\x07\x16\u0178\n\x16\f\x16\x0E\x16\u017B\v\x16\x07\x16\u017D" +
		"\n\x16\f\x16\x0E\x16\u0180\v\x16\x03\x16\x05\x16\u0183\n\x16\x03\x16\x05" +
		"\x16\u0186\n\x16\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18" +
		"\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A" +
		"\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C" +
		"\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D" +
		"\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E" +
		"\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03 \x03" +
		" \x03 \x03 \x03 \x03 \x03!\x03!\x03!\x03!\x03!\x03!\x03!\x03\"\x03\"\x03" +
		"\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03#\x03#\x03#\x03#\x03#\x03#\x03#\x03" +
		"#\x03$\x03$\x03$\x03$\x03$\x03$\x03$\x03$\x03%\x03%\x03%\x03%\x03%\x03" +
		"%\x03&\x03&\x03&\x03&\x03\'\x03\'\x03\'\x03(\x03(\x03(\x03(\x03)\x03)" +
		"\x03)\x03)\x03)\x03)\x03*\x03*\x03*\x03*\x03*\x03*\x03*\x03+\x03+\x03" +
		"+\x03+\x03+\x03+\x03+\x03,\x03,\x03,\x03,\x03,\x03,\x03-\x03-\x03-\x03" +
		"-\x03-\x03-\x03-\x03-\x03.\x03.\x03.\x03.\x03.\x03.\x03.\x03.\x03.\x03" +
		"/\x03/\x03/\x03/\x03/\x03/\x03/\x030\x030\x030\x030\x030\x031\x031\x03" +
		"1\x031\x031\x031\x031\x032\x032\x032\x032\x032\x032\x033\x033\x033\x03" +
		"3\x034\x034\x034\x034\x035\x035\x035\x036\x036\x036\x037\x037\x038\x03" +
		"8\x038\x039\x039\x039\x03:\x03:\x03:\x03;\x03;\x03;\x03<\x03<\x03<\x03" +
		"=\x03=\x03=\x03>\x03>\x03>\x03?\x03?\x03@\x03@\x03A\x03A\x03B\x03B\x03" +
		"C\x03C\x03D\x03D\x03D\x03E\x03E\x03F\x03F\x03G\x03G\x03H\x03H\x03I\x03" +
		"I\x03J\x03J\x03K\x03K\x03L\x03L\x03M\x03M\x03N\x03N\x03O\x03O\x03P\x03" +
		"P\x03Q\x03Q\x03R\x03R\x03R\x03S\x03S\x03S\x03T\x03T\x03T\x03U\x03U\x03" +
		"U\x03V\x03V\x03W\x03W\x03X\x03X\x03X\x03Y\x03Y\x03Y\x03Z\x03Z\x03Z\x03" +
		"[\x03[\x03[\x03\\\x03\\\x03]\x03]\x03^\x03^\x03_\x03_\x03`\x03`\x03`\x03" +
		"a\x03a\x03a\x03b\x03b\x03b\x03b\x03b\x03b\x03b\x03b\x03b\x03b\x03b\x03" +
		"b\x03b\x03b\x03b\x03b\x03b\x03b\x03b\x03b\x03b\x03b\x03b\x03b\x03b\x03" +
		"b\x03b\x03b\x03b\x03b\x03b\x03b\x03b\x03b\x03b\x03b\x03b\x03b\x03b\x03" +
		"b\x03b\x03b\x03b\x03b\x03b\x03b\x03b\x05b\u02DB\nb\x03c\x03c\x06c\u02DF" +
		"\nc\rc\x0Ec\u02E0\x03d\x03d\x07d\u02E5\nd\fd\x0Ed\u02E8\vd\x03\u0162\x02" +
		"\x02e\x05\x02\x02\x07\x02\x03\t\x02\x04\v\x02\x02\r\x02\x02\x0F\x02\x02" +
		"\x11\x02\x02\x13\x02\x02\x15\x02\x05\x17\x02\x06\x19\x02\x02\x1B\x02\x07" +
		"\x1D\x02\b\x1F\x02\t!\x02\x02#\x02\n%\x02\x02\'\x02\v)\x02\f+\x02\r-\x02" +
		"\x0E/\x02\x0F1\x02\x103\x02\x115\x02\x127\x02\x139\x02\x14;\x02\x15=\x02" +
		"\x16?\x02\x17A\x02\x18C\x02\x19E\x02\x1AG\x02\x1BI\x02\x1CK\x02\x1DM\x02" +
		"\x1EO\x02\x1FQ\x02 S\x02!U\x02\"W\x02#Y\x02$[\x02%]\x02&_\x02\'a\x02(" +
		"c\x02)e\x02*g\x02+i\x02,k\x02-m\x02.o\x02/q\x020s\x021u\x022w\x023y\x02" +
		"4{\x025}\x026\x7F\x027\x81\x028\x83\x029\x85\x02:\x87\x02;\x89\x02<\x8B" +
		"\x02=\x8D\x02>\x8F\x02?\x91\x02@\x93\x02A\x95\x02B\x97\x02C\x99\x02D\x9B" +
		"\x02E\x9D\x02F\x9F\x02G\xA1\x02H\xA3\x02I\xA5\x02J\xA7\x02K\xA9\x02L\xAB" +
		"\x02M\xAD\x02N\xAF\x02O\xB1\x02P\xB3\x02Q\xB5\x02R\xB7\x02S\xB9\x02T\xBB" +
		"\x02U\xBD\x02V\xBF\x02W\xC1\x02X\xC3\x02Y\xC5\x02Z\xC7\x02[\xC9\x02\\" +
		"\x05\x02\x03\x04\x13\x03\x023;\x04\x022;aa\x03\x022;\x04\x02ZZzz\x06\x02" +
		"2;CHaach\x04\x0229aa\x04\x02DDdd\x04\x0223aa\x04\x02))^^\x04\x02$$^^\x04" +
		"\x02C\\aa\x05\x022;C\\aa\x04\x02\v\v\"\"\x05\x02\v\f\x0E\x0F\"\"\x04\x02" +
		"\f\f\x0F\x0F\x05\x02C\\aac|\x06\x022;C\\aac|\x02\u0303\x02\x07\x03\x02" +
		"\x02\x02\x02\t\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02" +
		"\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\'\x03\x02" +
		"\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02" +
		"\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03" +
		"\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02" +
		"\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02" +
		"C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02" +
		"\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02" +
		"\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02W\x03" +
		"\x02\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02\x02]\x03\x02\x02" +
		"\x02\x02_\x03\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03\x02\x02\x02\x02" +
		"e\x03\x02\x02\x02\x02g\x03\x02\x02\x02\x02i\x03\x02\x02\x02\x02k\x03\x02" +
		"\x02\x02\x02m\x03\x02\x02\x02\x02o\x03\x02\x02\x02\x02q\x03\x02\x02\x02" +
		"\x02s\x03\x02\x02\x02\x02u\x03\x02\x02\x02\x02w\x03\x02\x02\x02\x02y\x03" +
		"\x02\x02\x02\x02{\x03\x02\x02\x02\x02}\x03\x02\x02\x02\x02\x7F\x03\x02" +
		"\x02\x02\x02\x81\x03\x02\x02\x02\x02\x83\x03\x02\x02\x02\x02\x85\x03\x02" +
		"\x02\x02\x02\x87\x03\x02\x02\x02\x02\x89\x03\x02\x02\x02\x02\x8B\x03\x02" +
		"\x02\x02\x02\x8D\x03\x02\x02\x02\x02\x8F\x03\x02\x02\x02\x02\x91\x03\x02" +
		"\x02\x02\x02\x93\x03\x02\x02\x02\x02\x95\x03\x02\x02\x02\x02\x97\x03\x02" +
		"\x02\x02\x02\x99\x03\x02\x02\x02\x02\x9B\x03\x02\x02\x02\x02\x9D\x03\x02" +
		"\x02\x02\x02\x9F\x03\x02\x02\x02\x02\xA1\x03\x02\x02\x02\x02\xA3\x03\x02" +
		"\x02\x02\x02\xA5\x03\x02\x02\x02\x02\xA7\x03\x02\x02\x02\x02\xA9\x03\x02" +
		"\x02\x02\x02\xAB\x03\x02\x02\x02\x02\xAD\x03\x02\x02\x02\x02\xAF\x03\x02" +
		"\x02\x02\x02\xB1\x03\x02\x02\x02\x02\xB3\x03\x02\x02\x02\x02\xB5\x03\x02" +
		"\x02\x02\x02\xB7\x03\x02\x02\x02\x02\xB9\x03\x02\x02\x02\x02\xBB\x03\x02" +
		"\x02\x02\x02\xBD\x03\x02\x02\x02\x02\xBF\x03\x02\x02\x02\x02\xC1\x03\x02" +
		"\x02\x02\x02\xC3\x03\x02\x02\x02\x02\xC5\x03\x02\x02\x02\x02\xC7\x03\x02" +
		"\x02\x02\x02\xC9\x03\x02\x02\x02\x03\x1F\x03\x02\x02\x02\x03!\x03\x02" +
		"\x02\x02\x04#\x03\x02\x02\x02\x04%\x03\x02\x02\x02\x05\xCC\x03\x02\x02" +
		"\x02\x07\xD4\x03\x02\x02\x02\t\xD6\x03\x02\x02\x02\v\xE0\x03\x02\x02\x02" +
		"\r\xF3\x03\x02\x02\x02\x0F\xF5\x03\x02\x02\x02\x11\xFC\x03\x02\x02\x02" +
		"\x13\u0102\x03\x02\x02\x02\x15\u0109\x03\x02\x02\x02\x17\u0111\x03\x02" +
		"\x02\x02\x19\u011C\x03\x02\x02\x02\x1B\u0123\x03\x02\x02\x02\x1D\u0128" +
		"\x03\x02\x02\x02\x1F\u012F\x03\x02\x02\x02!\u0138\x03\x02\x02\x02#\u013C" +
		"\x03\x02\x02\x02%\u0146\x03\x02\x02\x02\'\u014B\x03\x02\x02\x02)\u0151" +
		"\x03\x02\x02\x02+\u015C\x03\x02\x02\x02-\u016A\x03\x02\x02\x02/\u0189" +
		"\x03\x02\x02\x021\u018C\x03\x02\x02\x023\u0191\x03\x02\x02\x025\u0195" +
		"\x03\x02\x02\x027\u019B\x03\x02\x02\x029\u019E\x03\x02\x02\x02;\u01A5" +
		"\x03\x02\x02\x02=\u01AA\x03\x02\x02\x02?\u01B2\x03\x02\x02\x02A\u01B8" +
		"\x03\x02\x02\x02C\u01C1\x03\x02\x02\x02E\u01C8\x03\x02\x02\x02G\u01D0" +
		"\x03\x02\x02\x02I\u01D8\x03\x02\x02\x02K\u01E0\x03\x02\x02\x02M\u01E6" +
		"\x03\x02\x02\x02O\u01EA\x03\x02\x02\x02Q\u01ED\x03\x02\x02\x02S\u01F1" +
		"\x03\x02\x02\x02U\u01F7\x03\x02\x02\x02W\u01FE\x03\x02\x02\x02Y\u0205" +
		"\x03\x02\x02\x02[\u020B\x03\x02\x02\x02]\u0213\x03\x02\x02\x02_\u021C" +
		"\x03\x02\x02\x02a\u0223\x03\x02\x02\x02c\u0228\x03\x02\x02\x02e\u022F" +
		"\x03\x02\x02\x02g\u0235\x03\x02\x02\x02i\u0239\x03\x02\x02\x02k\u023D" +
		"\x03\x02\x02\x02m\u0240\x03\x02\x02\x02o\u0243\x03\x02\x02\x02q\u0245" +
		"\x03\x02\x02\x02s\u0248\x03\x02\x02\x02u\u024B\x03\x02\x02\x02w\u024E" +
		"\x03\x02\x02\x02y\u0251\x03\x02\x02\x02{\u0254\x03\x02\x02\x02}\u0257" +
		"\x03\x02\x02\x02\x7F\u025A\x03\x02\x02\x02\x81\u025C\x03\x02\x02\x02\x83" +
		"\u025E\x03\x02\x02\x02\x85\u0260\x03\x02\x02\x02\x87\u0262\x03\x02\x02" +
		"\x02\x89\u0264\x03\x02\x02\x02\x8B\u0267\x03\x02\x02\x02\x8D\u0269\x03" +
		"\x02\x02\x02\x8F\u026B\x03\x02\x02\x02\x91\u026D\x03\x02\x02\x02\x93\u026F" +
		"\x03\x02\x02\x02\x95\u0271\x03\x02\x02\x02\x97\u0273\x03\x02\x02\x02\x99" +
		"\u0275\x03\x02\x02\x02\x9B\u0277\x03\x02\x02\x02\x9D\u0279\x03\x02\x02" +
		"\x02\x9F\u027B\x03\x02\x02\x02\xA1\u027D\x03\x02\x02\x02\xA3\u027F\x03" +
		"\x02\x02\x02\xA5\u0281\x03\x02\x02\x02\xA7\u0284\x03\x02\x02\x02\xA9\u0287" +
		"\x03\x02\x02\x02\xAB\u028A\x03\x02\x02\x02\xAD\u028D\x03\x02\x02\x02\xAF" +
		"\u028F\x03\x02\x02\x02\xB1\u0291\x03\x02\x02\x02\xB3\u0294\x03\x02\x02" +
		"\x02\xB5\u0297\x03\x02\x02\x02\xB7\u029A\x03\x02\x02\x02\xB9\u029D\x03" +
		"\x02\x02\x02\xBB\u029F\x03\x02\x02\x02\xBD\u02A1\x03\x02\x02\x02\xBF\u02A3" +
		"\x03\x02\x02\x02\xC1\u02A5\x03\x02\x02\x02\xC3\u02A8\x03\x02\x02\x02\xC5" +
		"\u02DA\x03\x02\x02\x02\xC7\u02DC\x03\x02\x02\x02\xC9\u02E2\x03\x02\x02" +
		"\x02\xCB\xCD\x07\x0F\x02\x02\xCC\xCB\x03\x02\x02\x02\xCC\xCD\x03\x02\x02" +
		"\x02\xCD\xCE\x03\x02\x02\x02\xCE\xCF\x07\f\x02\x02\xCF\x06\x03\x02\x02" +
		"\x02\xD0\xD5\x05\x0F\x07\x02\xD1\xD5\x05\x11\b\x02\xD2\xD5\x05\x13\t\x02" +
		"\xD3\xD5\x05\v\x05\x02\xD4\xD0\x03\x02\x02\x02\xD4\xD1\x03\x02\x02\x02" +
		"\xD4\xD2\x03\x02\x02\x02\xD4\xD3\x03\x02\x02\x02\xD5\b\x03\x02\x02\x02" +
		"\xD6\xD7\x05\r\x06\x02\xD7\n\x03\x02\x02\x02\xD8\xE1\x072\x02\x02\xD9" +
		"\xDD\t\x02\x02\x02\xDA\xDC\t\x03\x02\x02\xDB\xDA\x03\x02\x02\x02\xDC\xDF" +
		"\x03\x02\x02\x02\xDD\xDB\x03\x02\x02\x02\xDD\xDE\x03\x02\x02\x02\xDE\xE1" +
		"\x03\x02\x02\x02\xDF\xDD\x03\x02\x02\x02\xE0\xD8\x03\x02\x02\x02\xE0\xD9" +
		"\x03\x02\x02\x02\xE1\f\x03\x02\x02\x02\xE2\xE4\t\x04\x02\x02\xE3\xE2\x03" +
		"\x02\x02\x02\xE4\xE5\x03\x02\x02\x02\xE5\xE3\x03\x02\x02\x02\xE5\xE6\x03" +
		"\x02\x02\x02\xE6\xE7\x03\x02\x02\x02\xE7\xE9\x070\x02\x02\xE8\xEA\t\x04" +
		"\x02\x02\xE9\xE8\x03\x02\x02\x02\xEA\xEB\x03\x02\x02\x02\xEB\xE9\x03\x02" +
		"\x02\x02\xEB\xEC\x03\x02\x02\x02\xEC\xF4\x03\x02\x02\x02\xED\xEF\x070" +
		"\x02\x02\xEE\xF0\t\x04\x02\x02\xEF\xEE\x03\x02\x02\x02\xF0\xF1\x03\x02" +
		"\x02\x02\xF1\xEF\x03\x02\x02\x02\xF1\xF2\x03\x02\x02\x02\xF2\xF4\x03\x02" +
		"\x02\x02\xF3\xE3\x03\x02\x02\x02\xF3\xED\x03\x02\x02\x02\xF4\x0E\x03\x02" +
		"\x02\x02\xF5\xF6\x072\x02\x02\xF6\xF8\t\x05\x02\x02\xF7\xF9\t\x06\x02" +
		"\x02\xF8\xF7\x03\x02\x02\x02\xF9\xFA\x03\x02\x02\x02\xFA\xF8\x03\x02\x02" +
		"\x02\xFA\xFB\x03\x02\x02\x02\xFB\x10\x03\x02\x02\x02\xFC\xFE\x072\x02" +
		"\x02\xFD\xFF\t\x07\x02\x02\xFE\xFD\x03\x02\x02\x02\xFF\u0100\x03\x02\x02" +
		"\x02\u0100\xFE\x03\x02\x02\x02\u0100\u0101\x03\x02\x02\x02\u0101\x12\x03" +
		"\x02\x02\x02\u0102\u0103\x072\x02\x02\u0103\u0105\t\b\x02\x02\u0104\u0106" +
		"\t\t\x02\x02\u0105\u0104\x03\x02\x02\x02\u0106\u0107\x03\x02\x02\x02\u0107" +
		"\u0105\x03\x02\x02\x02\u0107\u0108\x03\x02\x02\x02\u0108\x14\x03\x02\x02" +
		"\x02\u0109\u010D\x07)\x02\x02\u010A\u010B\x07^\x02\x02\u010B\u010E\v\x02" +
		"\x02\x02\u010C\u010E\n\n\x02\x02\u010D\u010A\x03\x02\x02\x02\u010D\u010C" +
		"\x03\x02\x02\x02\u010E\u010F\x03\x02\x02\x02\u010F\u0110\x07)\x02\x02" +
		"\u0110\x16\x03\x02\x02\x02\u0111\u0117\x07$\x02\x02\u0112\u0113\x07^\x02" +
		"\x02\u0113\u0116\v\x02\x02\x02\u0114\u0116\n\v\x02\x02\u0115\u0112\x03" +
		"\x02\x02\x02\u0115\u0114\x03\x02\x02\x02\u0116\u0119\x03\x02\x02\x02\u0117" +
		"\u0115\x03\x02\x02\x02\u0117\u0118\x03\x02\x02\x02\u0118\u011A\x03\x02" +
		"\x02\x02\u0119\u0117\x03\x02\x02\x02\u011A\u011B\x07$\x02\x02\u011B\x18" +
		"\x03\x02\x02\x02\u011C\u0120\t\f\x02\x02\u011D\u011F\t\r\x02\x02\u011E" +
		"\u011D\x03\x02\x02\x02\u011F\u0122\x03\x02\x02\x02\u0120\u011E\x03\x02" +
		"\x02\x02\u0120\u0121\x03\x02\x02\x02\u0121\x1A\x03\x02\x02\x02\u0122\u0120" +
		"\x03\x02\x02\x02\u0123\u0124\x07B\x02\x02\u0124\u0125\x05\x19\f\x02\u0125" +
		"\u0126\x05\x05\x02\x02\u0126\u0127\b\r\x02\x02\u0127\x1C\x03\x02\x02\x02" +
		"\u0128\u0129\x07B\x02\x02\u0129\u012A\x07B\x02\x02\u012A\u012B\x03\x02" +
		"\x02\x02\u012B\u012C\x05\x19\f\x02\u012C\u012D\x05\x05\x02\x02\u012D\u012E" +
		"\b\x0E\x03\x02\u012E\x1E\x03\x02\x02\x02\u012F\u0133\x05\x19\f\x02\u0130" +
		"\u0132\t\x0E\x02\x02\u0131\u0130\x03\x02\x02\x02\u0132\u0135\x03\x02\x02" +
		"\x02\u0133\u0131\x03\x02\x02\x02\u0133\u0134\x03\x02\x02\x02\u0134\u0136" +
		"\x03\x02\x02\x02\u0135\u0133\x03\x02\x02\x02\u0136\u0137\b\x0F\x04\x02" +
		"\u0137 \x03\x02\x02\x02\u0138\u0139\v\x02\x02\x02\u0139\u013A\x03\x02" +
		"\x02\x02\u013A\u013B\b\x10\x05\x02\u013B\"\x03\x02\x02\x02\u013C\u013D" +
		"\x05\x19\f\x02\u013D\u0141\x07=\x02\x02\u013E\u0140\t\x0E\x02\x02\u013F" +
		"\u013E\x03\x02\x02\x02\u0140\u0143\x03\x02\x02\x02\u0141\u013F\x03\x02" +
		"\x02\x02\u0141\u0142\x03\x02\x02\x02\u0142\u0144\x03\x02\x02\x02\u0143" +
		"\u0141\x03\x02\x02\x02\u0144\u0145\b\x11\x06\x02\u0145$\x03\x02\x02\x02" +
		"\u0146\u0147\v\x02\x02\x02\u0147\u0148\x03\x02\x02\x02\u0148\u0149\b\x12" +
		"\x05\x02\u0149&\x03\x02\x02\x02\u014A\u014C\t\x0F\x02\x02\u014B\u014A" +
		"\x03\x02\x02\x02\u014C\u014D\x03\x02\x02\x02\u014D\u014B\x03\x02\x02\x02" +
		"\u014D\u014E\x03\x02\x02\x02\u014E\u014F\x03\x02\x02\x02\u014F\u0150\b" +
		"\x13\x07\x02\u0150(\x03\x02\x02\x02\u0151\u0152\x071\x02\x02\u0152\u0153" +
		"\x071\x02\x02\u0153\u0157\x03\x02\x02\x02\u0154\u0156\n\x10\x02\x02\u0155" +
		"\u0154\x03\x02\x02\x02\u0156\u0159\x03\x02\x02\x02\u0157\u0155\x03\x02" +
		"\x02\x02\u0157\u0158\x03\x02\x02\x02\u0158\u015A\x03\x02\x02\x02\u0159" +
		"\u0157\x03\x02\x02\x02\u015A\u015B\b\x14\b\x02\u015B*\x03\x02\x02\x02" +
		"\u015C\u015D\x071\x02\x02\u015D\u015E\x07,\x02\x02\u015E\u0162\x03\x02" +
		"\x02\x02\u015F\u0161\v\x02\x02\x02\u0160\u015F\x03\x02\x02\x02\u0161\u0164" +
		"\x03\x02\x02\x02\u0162\u0163\x03\x02\x02\x02\u0162\u0160\x03\x02\x02\x02" +
		"\u0163\u0165\x03\x02\x02\x02\u0164\u0162\x03\x02\x02\x02\u0165\u0166\x07" +
		",\x02\x02\u0166\u0167\x071\x02\x02\u0167\u0168\x03\x02\x02\x02\u0168\u0169" +
		"\b\x15\b\x02\u0169,\x03\x02\x02\x02\u016A\u016E\x07%\x02\x02\u016B\u016D" +
		"\n\x10\x02\x02\u016C\u016B\x03\x02\x02\x02\u016D\u0170\x03\x02\x02\x02" +
		"\u016E\u016C\x03\x02\x02\x02\u016E\u016F\x03\x02\x02\x02\u016F\u017E\x03" +
		"\x02\x02\x02\u0170\u016E\x03\x02\x02\x02\u0171\u0173\x07^\x02\x02\u0172" +
		"\u0174\x07\x0F\x02\x02\u0173\u0172\x03\x02\x02\x02\u0173\u0174\x03\x02" +
		"\x02\x02\u0174\u0175\x03\x02\x02\x02\u0175\u0179\x07\f\x02\x02\u0176\u0178" +
		"\n\x10\x02\x02\u0177\u0176\x03\x02\x02\x02\u0178\u017B\x03\x02\x02\x02" +
		"\u0179\u0177\x03\x02\x02\x02\u0179\u017A\x03\x02\x02\x02\u017A\u017D\x03" +
		"\x02\x02\x02\u017B\u0179\x03\x02\x02\x02\u017C\u0171\x03\x02\x02\x02\u017D" +
		"\u0180\x03\x02\x02\x02\u017E\u017C\x03\x02\x02\x02\u017E\u017F\x03\x02" +
		"\x02\x02\u017F\u0182\x03\x02\x02\x02\u0180\u017E\x03\x02\x02\x02\u0181" +
		"\u0183\x07\x0F\x02\x02\u0182\u0181\x03\x02\x02\x02\u0182\u0183\x03\x02" +
		"\x02\x02\u0183\u0185\x03\x02\x02\x02\u0184\u0186\x07\f\x02\x02\u0185\u0184" +
		"\x03\x02\x02\x02\u0185\u0186\x03\x02\x02\x02\u0186\u0187\x03\x02\x02\x02" +
		"\u0187\u0188\b\x16\b\x02\u0188.\x03\x02\x02\x02\u0189\u018A\x07k\x02\x02" +
		"\u018A\u018B\x07h\x02\x02\u018B0\x03\x02\x02\x02\u018C\u018D\x07g\x02" +
		"\x02\u018D\u018E\x07n\x02\x02\u018E\u018F\x07u\x02\x02\u018F\u0190\x07" +
		"g\x02\x02\u01902\x03\x02\x02\x02\u0191\u0192\x07h\x02\x02\u0192\u0193" +
		"\x07q\x02\x02\u0193\u0194\x07t\x02\x02\u01944\x03\x02\x02\x02\u0195\u0196" +
		"\x07y\x02\x02\u0196\u0197\x07j\x02\x02\u0197\u0198\x07k\x02\x02\u0198" +
		"\u0199\x07n\x02\x02\u0199\u019A\x07g\x02\x02\u019A6\x03\x02\x02\x02\u019B" +
		"\u019C\x07f\x02\x02\u019C\u019D\x07q\x02\x02\u019D8\x03\x02\x02\x02\u019E" +
		"\u019F\x07u\x02\x02\u019F\u01A0\x07y\x02\x02\u01A0\u01A1\x07k\x02\x02" +
		"\u01A1\u01A2\x07v\x02\x02\u01A2\u01A3\x07e\x02\x02\u01A3\u01A4\x07j\x02" +
		"\x02\u01A4:\x03\x02\x02\x02\u01A5\u01A6\x07e\x02\x02\u01A6\u01A7\x07c" +
		"\x02\x02\u01A7\u01A8\x07u\x02\x02\u01A8\u01A9\x07g\x02\x02\u01A9<\x03" +
		"\x02\x02\x02\u01AA\u01AB\x07f\x02\x02\u01AB\u01AC\x07g\x02\x02\u01AC\u01AD" +
		"\x07h\x02\x02\u01AD\u01AE\x07c\x02\x02\u01AE\u01AF\x07w\x02\x02\u01AF" +
		"\u01B0\x07n\x02\x02\u01B0\u01B1\x07v\x02\x02\u01B1>\x03\x02\x02\x02\u01B2" +
		"\u01B3\x07d\x02\x02\u01B3\u01B4\x07t\x02\x02\u01B4\u01B5\x07g\x02\x02" +
		"\u01B5\u01B6\x07c\x02\x02\u01B6\u01B7\x07m\x02\x02\u01B7@\x03\x02\x02" +
		"\x02\u01B8\u01B9\x07e\x02\x02\u01B9\u01BA\x07q\x02\x02\u01BA\u01BB\x07" +
		"p\x02\x02\u01BB\u01BC\x07v\x02\x02\u01BC\u01BD\x07k\x02\x02\u01BD\u01BE" +
		"\x07p\x02\x02\u01BE\u01BF\x07w\x02\x02\u01BF\u01C0\x07g\x02\x02\u01C0" +
		"B\x03\x02\x02\x02\u01C1\u01C2\x07t\x02\x02\u01C2\u01C3\x07g\x02\x02\u01C3" +
		"\u01C4\x07v\x02\x02\u01C4\u01C5\x07w\x02\x02\u01C5\u01C6\x07t\x02\x02" +
		"\u01C6\u01C7\x07p\x02\x02\u01C7D\x03\x02\x02\x02\u01C8\u01C9\x07h\x02" +
		"\x02\u01C9\u01CA\x07q\x02\x02\u01CA\u01CB\x07t\x02\x02\u01CB\u01CC\x07" +
		"g\x02\x02\u01CC\u01CD\x07c\x02\x02\u01CD\u01CE\x07e\x02\x02\u01CE\u01CF" +
		"\x07j\x02\x02\u01CFF\x03\x02\x02\x02\u01D0\u01D1\x07k\x02\x02\u01D1\u01D2" +
		"\x07p\x02\x02\u01D2\u01D3\x07j\x02\x02\u01D3\u01D4\x07g\x02\x02\u01D4" +
		"\u01D5\x07t\x02\x02\u01D5\u01D6\x07k\x02\x02\u01D6\u01D7\x07v\x02\x02" +
		"\u01D7H\x03\x02\x02\x02\u01D8\u01D9\x07k\x02\x02\u01D9\u01DA\x07p\x02" +
		"\x02\u01DA\u01DB\x07e\x02\x02\u01DB\u01DC\x07n\x02\x02\u01DC\u01DD\x07" +
		"w\x02\x02\u01DD\u01DE\x07f\x02\x02\u01DE\u01DF\x07g\x02\x02\u01DFJ\x03" +
		"\x02\x02\x02\u01E0\u01E1\x07e\x02\x02\u01E1\u01E2\x07c\x02\x02\u01E2\u01E3" +
		"\x07v\x02\x02\u01E3\u01E4\x07e\x02\x02\u01E4\u01E5\x07j\x02\x02\u01E5" +
		"L\x03\x02\x02\x02\u01E6\u01E7\x07t\x02\x02\u01E7\u01E8\x07g\x02\x02\u01E8" +
		"\u01E9\x07h\x02\x02\u01E9N\x03\x02";
	private static readonly _serializedATNSegment1: string =
		"\x02\x02\u01EA\u01EB\x07k\x02\x02\u01EB\u01EC\x07p\x02\x02\u01ECP\x03" +
		"\x02\x02\x02\u01ED\u01EE\x07k\x02\x02\u01EE\u01EF\x07p\x02\x02\u01EF\u01F0" +
		"\x07v\x02\x02\u01F0R\x03\x02\x02\x02\u01F1\u01F2\x07h\x02\x02\u01F2\u01F3" +
		"\x07n\x02\x02\u01F3\u01F4\x07q\x02\x02\u01F4\u01F5\x07c\x02\x02\u01F5" +
		"\u01F6\x07v\x02\x02\u01F6T\x03\x02\x02\x02\u01F7\u01F8\x07u\x02\x02\u01F8" +
		"\u01F9\x07v\x02\x02\u01F9\u01FA\x07t\x02\x02\u01FA\u01FB\x07k\x02\x02" +
		"\u01FB\u01FC\x07p\x02\x02\u01FC\u01FD\x07i\x02\x02\u01FDV\x03\x02\x02" +
		"\x02\u01FE\u01FF\x07q\x02\x02\u01FF\u0200\x07d\x02\x02\u0200\u0201\x07" +
		"l\x02\x02\u0201\u0202\x07g\x02\x02\u0202\u0203\x07e\x02\x02\u0203\u0204" +
		"\x07v\x02\x02\u0204X\x03\x02\x02\x02\u0205\u0206\x07o\x02\x02\u0206\u0207" +
		"\x07k\x02\x02\u0207\u0208\x07z\x02\x02\u0208\u0209\x07g\x02\x02\u0209" +
		"\u020A\x07f\x02\x02\u020AZ\x03\x02\x02\x02\u020B\u020C\x07o\x02\x02\u020C" +
		"\u020D\x07c\x02\x02\u020D\u020E\x07r\x02\x02\u020E\u020F\x07r\x02\x02" +
		"\u020F\u0210\x07k\x02\x02\u0210\u0211\x07p\x02\x02\u0211\u0212\x07i\x02" +
		"\x02\u0212\\\x03\x02\x02\x02\u0213\u0214\x07h\x02\x02\u0214\u0215\x07" +
		"w\x02\x02\u0215\u0216\x07p\x02\x02\u0216\u0217\x07e\x02\x02\u0217\u0218" +
		"\x07v\x02\x02\u0218\u0219\x07k\x02\x02\u0219\u021A\x07q\x02\x02\u021A" +
		"\u021B\x07p\x02\x02\u021B^\x03\x02\x02\x02\u021C\u021D\x07d\x02\x02\u021D" +
		"\u021E\x07w\x02\x02\u021E\u021F\x07h\x02\x02\u021F\u0220\x07h\x02\x02" +
		"\u0220\u0221\x07g\x02\x02\u0221\u0222\x07t\x02\x02\u0222`\x03\x02\x02" +
		"\x02\u0223\u0224\x07x\x02\x02\u0224\u0225\x07q\x02\x02\u0225\u0226\x07" +
		"k\x02\x02\u0226\u0227\x07f\x02\x02\u0227b\x03\x02\x02\x02\u0228\u0229" +
		"\x07u\x02\x02\u0229\u022A\x07v\x02\x02\u022A\u022B\x07t\x02\x02\u022B" +
		"\u022C\x07w\x02\x02\u022C\u022D\x07e\x02\x02\u022D\u022E\x07v\x02\x02" +
		"\u022Ed\x03\x02\x02\x02\u022F\u0230\x07e\x02\x02\u0230\u0231\x07n\x02" +
		"\x02\u0231\u0232\x07c\x02\x02\u0232\u0233\x07u\x02\x02\u0233\u0234\x07" +
		"u\x02\x02\u0234f\x03\x02\x02\x02\u0235\u0236\x07p\x02\x02\u0236\u0237" +
		"\x07g\x02\x02\u0237\u0238\x07y\x02\x02\u0238h\x03\x02\x02\x02\u0239\u023A" +
		"\x070\x02\x02\u023A\u023B\x070\x02\x02\u023B\u023C\x070\x02\x02\u023C" +
		"j\x03\x02\x02\x02\u023D\u023E\x070\x02\x02\u023E\u023F\x070\x02\x02\u023F" +
		"l\x03\x02\x02\x02\u0240\u0241\x07/\x02\x02\u0241\u0242\x07@\x02\x02\u0242" +
		"n\x03\x02\x02\x02\u0243\u0244\x070\x02\x02\u0244p\x03\x02\x02\x02\u0245" +
		"\u0246\x07-\x02\x02\u0246\u0247\x07-\x02\x02\u0247r\x03\x02\x02\x02\u0248" +
		"\u0249\x07/\x02\x02\u0249\u024A\x07/\x02\x02\u024At\x03\x02\x02\x02\u024B" +
		"\u024C\x07-\x02\x02\u024C\u024D\x07?\x02\x02\u024Dv\x03\x02\x02\x02\u024E" +
		"\u024F\x07/\x02\x02\u024F\u0250\x07?\x02\x02\u0250x\x03\x02\x02\x02\u0251" +
		"\u0252\x07,\x02\x02\u0252\u0253\x07?\x02\x02\u0253z\x03\x02\x02\x02\u0254" +
		"\u0255\x071\x02\x02\u0255\u0256\x07?\x02\x02\u0256|\x03\x02\x02\x02\u0257" +
		"\u0258\x07\'\x02\x02\u0258\u0259\x07?\x02\x02\u0259~\x03\x02\x02\x02\u025A" +
		"\u025B\x07-\x02\x02\u025B\x80\x03\x02\x02\x02\u025C\u025D\x07/\x02\x02" +
		"\u025D\x82\x03\x02\x02\x02\u025E\u025F\x07,\x02\x02\u025F\x84\x03\x02" +
		"\x02\x02\u0260\u0261\x071\x02\x02\u0261\x86\x03\x02\x02\x02\u0262\u0263" +
		"\x07\'\x02\x02\u0263\x88\x03\x02\x02\x02\u0264\u0265\x07<\x02\x02\u0265" +
		"\u0266\x07<\x02\x02\u0266\x8A\x03\x02\x02\x02\u0267\u0268\x07=\x02\x02" +
		"\u0268\x8C\x03\x02\x02\x02\u0269\u026A\x07.\x02\x02\u026A\x8E\x03\x02" +
		"\x02\x02\u026B\u026C\x07*\x02\x02\u026C\x90\x03\x02\x02\x02\u026D\u026E" +
		"\x07+\x02\x02\u026E\x92\x03\x02\x02\x02\u026F\u0270\x07}\x02\x02\u0270" +
		"\x94\x03\x02\x02\x02\u0271\u0272\x07\x7F\x02\x02\u0272\x96\x03\x02\x02" +
		"\x02\u0273\u0274\x07]\x02\x02\u0274\x98\x03\x02\x02\x02\u0275\u0276\x07" +
		"_\x02\x02\u0276\x9A\x03\x02\x02\x02\u0277\u0278\x07A\x02\x02\u0278\x9C" +
		"\x03\x02\x02\x02\u0279\u027A\x07<\x02\x02\u027A\x9E\x03\x02\x02\x02\u027B" +
		"\u027C\x07&\x02\x02\u027C\xA0\x03\x02\x02\x02\u027D\u027E\x07@\x02\x02" +
		"\u027E\xA2\x03\x02\x02\x02\u027F\u0280\x07>\x02\x02\u0280\xA4\x03\x02" +
		"\x02\x02\u0281\u0282\x07@\x02\x02\u0282\u0283\x07?\x02\x02\u0283\xA6\x03" +
		"\x02\x02\x02\u0284\u0285\x07>\x02\x02\u0285\u0286\x07?\x02\x02\u0286\xA8" +
		"\x03\x02\x02\x02\u0287\u0288\x07?\x02\x02\u0288\u0289\x07?\x02\x02\u0289" +
		"\xAA\x03\x02\x02\x02\u028A\u028B\x07#\x02\x02\u028B\u028C\x07?\x02\x02" +
		"\u028C\xAC\x03\x02\x02\x02\u028D\u028E\x07?\x02\x02\u028E\xAE\x03\x02" +
		"\x02\x02\u028F\u0290\x07#\x02\x02\u0290\xB0\x03\x02\x02\x02\u0291\u0292" +
		"\x07(\x02\x02\u0292\u0293\x07(\x02\x02\u0293\xB2\x03\x02\x02\x02\u0294" +
		"\u0295\x07~\x02\x02\u0295\u0296\x07~\x02\x02\u0296\xB4\x03\x02\x02\x02" +
		"\u0297\u0298\x07>\x02\x02\u0298\u0299\x07>\x02\x02\u0299\xB6\x03\x02\x02" +
		"\x02\u029A\u029B\x07@\x02\x02\u029B\u029C\x07@\x02\x02\u029C\xB8\x03\x02" +
		"\x02\x02\u029D\u029E\x07(\x02\x02\u029E\xBA\x03\x02\x02\x02\u029F\u02A0" +
		"\x07~\x02\x02\u02A0\xBC\x03\x02\x02\x02\u02A1\u02A2\x07`\x02\x02\u02A2" +
		"\xBE\x03\x02\x02\x02\u02A3\u02A4\x07\x80\x02\x02\u02A4\xC0\x03\x02\x02" +
		"\x02\u02A5\u02A6\x07~\x02\x02\u02A6\u02A7\x07?\x02\x02\u02A7\xC2\x03\x02" +
		"\x02\x02\u02A8\u02A9\x07(\x02\x02\u02A9\u02AA\x07?\x02\x02\u02AA\xC4\x03" +
		"\x02\x02\x02\u02AB\u02AC\x07r\x02\x02\u02AC\u02AD\x07t\x02\x02\u02AD\u02AE" +
		"\x07k\x02\x02\u02AE\u02AF\x07x\x02\x02\u02AF\u02B0\x07c\x02\x02\u02B0" +
		"\u02B1\x07v\x02\x02\u02B1\u02DB\x07g\x02\x02\u02B2\u02B3\x07r\x02\x02" +
		"\u02B3\u02B4\x07w\x02\x02\u02B4\u02B5\x07d\x02\x02\u02B5\u02B6\x07n\x02" +
		"\x02\u02B6\u02B7\x07k\x02\x02\u02B7\u02DB\x07e\x02\x02\u02B8\u02B9\x07" +
		"r\x02\x02\u02B9\u02BA\x07t\x02\x02\u02BA\u02BB\x07q\x02\x02\u02BB\u02BC" +
		"\x07v\x02\x02\u02BC\u02BD\x07g\x02\x02\u02BD\u02BE\x07e\x02\x02\u02BE" +
		"\u02BF\x07v\x02\x02\u02BF\u02C0\x07g\x02\x02\u02C0\u02DB\x07f\x02\x02" +
		"\u02C1\u02C2\x07x\x02\x02\u02C2\u02C3\x07c\x02\x02\u02C3\u02C4\x07t\x02" +
		"\x02\u02C4\u02C5\x07c\x02\x02\u02C5\u02C6\x07t\x02\x02\u02C6\u02C7\x07" +
		"i\x02\x02\u02C7\u02DB\x07u\x02\x02\u02C8\u02C9\x07p\x02\x02\u02C9\u02CA" +
		"\x07q\x02\x02\u02CA\u02CB\x07u\x02\x02\u02CB\u02CC\x07c\x02\x02\u02CC" +
		"\u02CD\x07x\x02\x02\u02CD\u02DB\x07g\x02\x02\u02CE\u02CF\x07u\x02\x02" +
		"\u02CF\u02D0\x07v\x02\x02\u02D0\u02D1\x07c\x02\x02\u02D1\u02D2\x07v\x02" +
		"\x02\u02D2\u02D3\x07k\x02\x02\u02D3\u02DB\x07e\x02\x02\u02D4\u02D5\x07" +
		"p\x02\x02\u02D5\u02D6\x07q\x02\x02\u02D6\u02D7\x07o\x02\x02\u02D7\u02D8" +
		"\x07c\x02\x02\u02D8\u02D9\x07u\x02\x02\u02D9\u02DB\x07m\x02\x02\u02DA" +
		"\u02AB\x03\x02\x02\x02\u02DA\u02B2\x03\x02\x02\x02\u02DA\u02B8\x03\x02" +
		"\x02\x02\u02DA\u02C1\x03\x02\x02\x02\u02DA\u02C8\x03\x02\x02\x02\u02DA" +
		"\u02CE\x03\x02\x02\x02\u02DA\u02D4\x03\x02\x02\x02\u02DB\xC6\x03\x02\x02" +
		"\x02\u02DC\u02DE\x07&\x02\x02\u02DD\u02DF\t\x04\x02\x02\u02DE\u02DD\x03" +
		"\x02\x02\x02\u02DF\u02E0\x03\x02\x02\x02\u02E0\u02DE\x03\x02\x02\x02\u02E0" +
		"\u02E1\x03\x02\x02\x02\u02E1\xC8\x03\x02\x02\x02\u02E2\u02E6\t\x11\x02" +
		"\x02\u02E3\u02E5\t\x12\x02\x02\u02E4\u02E3\x03\x02\x02\x02\u02E5\u02E8" +
		"\x03\x02\x02\x02\u02E6\u02E4\x03\x02\x02\x02\u02E6\u02E7\x03\x02\x02\x02" +
		"\u02E7\xCA\x03\x02\x02\x02\u02E8\u02E6\x03\x02\x02\x02\"\x02\x03\x04\xCC" +
		"\xD4\xDD\xE0\xE5\xEB\xF1\xF3\xFA\u0100\u0107\u010D\u0115\u0117\u0120\u0133" +
		"\u0141\u014D\u0157\u0162\u016E\u0173\u0179\u017E\u0182\u0185\u02DA\u02E0" +
		"\u02E6\t\x03\r\x02\x03\x0E\x03\x03\x0F\x04\x05\x02\x02\x03\x11\x05\b\x02" +
		"\x02\x02\x03\x02";
	public static readonly _serializedATN: string = Utils.join(
		[
			LPCLexer._serializedATNSegment0,
			LPCLexer._serializedATNSegment1,
		],
		"",
	);
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!LPCLexer.__ATN) {
			LPCLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(LPCLexer._serializedATN));
		}

		return LPCLexer.__ATN;
	}

}

