{
  "name": "lpc-support",
  "displayName": "LPC[FluffOS]",
  "description": "LPC (LP MUD Creation Language) 语言支持",
  "version": "0.1.7",
  "publisher": "ludexiang",
  "author": {
    "name": "ludexiang",
    "url": "https://github.com/lude2001"
  },
  "homepage": "https://github.com/lude2001/lpc-support#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/lude2001/lpc-support.git"
  },
  "bugs": {
    "url": "https://github.com/lude2001/lpc-support/issues"
  },
  "keywords": [
    "lpc",
    "fluffos",
    "mud",
    "lpmud",
    "language-support",
    "syntax-highlighting",
    "code-completion",
    "programming-language"
  ],
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "main": "./dist/extension.js",
  "activationEvents": [],
  "dependencies": {
    "@types/cheerio": "^0.22.35",
    "@types/vscode": "^1.95.0",
    "antlr4ts": "^0.5.0-alpha.4",
    "axios": "^1.12.1",
    "cheerio": "^1.0.0-rc.12"
  },
  "devDependencies": {
    "@types/jest": "^29.5.14",
    "@types/node": "^20.x",
    "@vscode/test-electron": "^2.3.8",
    "antlr4ts-cli": "^0.5.0-alpha.4",
    "cross-env": "^7.0.3",
    "esbuild": "^0.25.5",
    "esbuild-node-externals": "^1.18.0",
    "jest": "^29.7.0",
    "jest-environment-node": "^29.7.0",
    "rimraf": "^5.0.10",
    "ts-jest": "^29.1.1",
    "typescript": "^5.0.0"
  },
  "contributes": {
    "languages": [
      {
        "id": "lpc",
        "aliases": [
          "LPC",
          "lpc"
        ],
        "extensions": [
          ".c",
          ".h",
          ".lpc",
          ".i"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "lpc",
        "scopeName": "source.lpc",
        "path": "./syntaxes/lpc.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "lpc",
        "path": "./snippets/lpc.json"
      }
    ],
    "commands": [
      {
        "command": "lpc.startDriver",
        "title": "启动MUD驱动",
        "category": "LPC"
      },
      {
        "command": "lpc-support.checkUnusedVariables",
        "title": "检查未使用的变量"
      },
      {
        "command": "lpc.showVariables",
        "title": "显示所有 LPC 变量"
      },
      {
        "command": "lpc.scanFolder",
        "title": "扫描文件夹中未使用的变量",
        "category": "LPC"
      },
      {
        "command": "lpc.addServer",
        "title": "LPC: 添加FluffOS服务器",
        "category": "LPC"
      },
      {
        "command": "lpc.selectServer",
        "title": "LPC: 选择活动服务器",
        "category": "LPC"
      },
      {
        "command": "lpc.removeServer",
        "title": "LPC: 删除服务器",
        "category": "LPC"
      },
      {
        "command": "lpc.compileFile",
        "title": "编译LPC文件",
        "category": "LPC"
      },
      {
        "command": "lpc.compileFolder",
        "title": "批量编译LPC文件",
        "category": "LPC"
      },
      {
        "command": "lpc.manageServers",
        "title": "管理编译服务器",
        "category": "LPC"
      },
      {
        "command": "lpc.showMacros",
        "title": "显示所有宏定义",
        "category": "LPC"
      },
      {
        "command": "lpc.configureMacroPath",
        "title": "配置宏定义目录",
        "category": "LPC"
      },
      {
        "command": "lpc.updateEfunDocs",
        "title": "更新 Efun 文档",
        "category": "LPC"
      },
      {
        "command": "lpc.configureSimulatedEfuns",
        "title": "配置模拟函数库目录",
        "category": "LPC"
      },
      {
        "command": "lpc.efunDocsSettings",
        "title": "efun文档设置",
        "category": "LPC"
      },
      {
        "command": "lpc.scanInheritance",
        "title": "扫描继承关系",
        "category": "LPC"
      },
      {
        "command": "lpc.showFunctionDoc",
        "title": "显示函数文档面板",
        "category": "LPC",
        "icon": {
          "light": "./media/function-doc-light.svg",
          "dark": "./media/function-doc-dark.svg"
        }
      },
      {
        "command": "lpc.showParseTree",
        "title": "调试：显示 LPC 解析树",
        "category": "LPC"
      },
      {
        "command": "lpc.debugParseErrors",
        "title": "调试：解析错误详情",
        "category": "LPC"
      },
      {
        "command": "lpc.showPerformanceStats",
        "title": "显示性能统计",
        "category": "LPC"
      },
      {
        "command": "lpc.clearCache",
        "title": "清理解析缓存",
        "category": "LPC"
      },
      {
        "command": "lpc.generateJavadoc",
        "title": "生成Javadoc注释",
        "category": "LPC"
      },
      {
        "command": "lpc.errorTree.refresh",
        "title": "刷新",
        "icon": "$(refresh)"
      },
      {
        "command": "lpc.errorTree.clear",
        "title": "清空所有错误",
        "icon": "$(clear-all)"
      },
      {
        "command": "lpc.errorTree.manageServers",
        "title": "管理服务器",
        "icon": "$(settings-gear)"
      },
      {
        "command": "lpc.errorTree.selectServer",
        "title": "切换服务器",
        "icon": "$(server-environment)"
      },
      {
        "command": "lpc.errorTree.openErrorLocation",
        "title": "打开错误位置"
      },
      {
        "command": "lpc.errorTree.copyError",
        "title": "复制错误信息",
        "icon": "$(copy)"
      },
    ],
    "menus": {
      "view/title": [
        {
          "command": "lpc.errorTree.selectServer",
          "when": "view == lpcErrorTree",
          "group": "navigation@1"
        },
        {
          "command": "lpc.errorTree.refresh",
          "when": "view == lpcErrorTree",
          "group": "navigation@2"
        },
        {
          "command": "lpc.errorTree.clear",
          "when": "view == lpcErrorTree",
          "group": "navigation@3"
        },
        {
          "command": "lpc.errorTree.manageServers",
          "when": "view == lpcErrorTree",
          "group": "navigation@4"
        }
      ],
      "view/item/context": [
        {
          "command": "lpc.errorTree.copyError",
          "when": "view == lpcErrorTree && viewItem == errorItem",
          "group": "inline"
        }
      ],
      "editor/context": [
        {
          "when": "resourceLangId == lpc",
          "command": "lpc-support.checkUnusedVariables",
          "group": "1_modification"
        },
        {
          "when": "editorLangId == lpc",
          "command": "lpc.showVariables",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == lpc",
          "command": "lpc.compileFile",
          "group": "LPC"
        },
        {
          "when": "resourceLangId == lpc",
          "command": "lpc.manageServers",
          "group": "LPC"
        },
        {
          "when": "resourceLangId == lpc",
          "command": "lpc.showMacros",
          "group": "LPC"
        },
        {
          "when": "resourceLangId == lpc",
          "command": "lpc.efunDocsSettings",
          "label": "efun文档设置",
          "group": "LPC@1"
        },
        {
          "when": "resourceLangId == lpc",
          "command": "lpc.scanInheritance",
          "group": "LPC"
        },
        {
          "when": "resourceLangId == lpc",
          "command": "lpc.showPerformanceStats",
          "group": "LPC"
        },
        {
          "when": "resourceLangId == lpc",
          "command": "lpc.clearCache",
          "group": "LPC"
        },
        {
          "when": "resourceLangId == lpc",
          "command": "lpc.generateJavadoc",
          "group": "LPC"
        },
      ],
      "explorer/context": [
        {
          "command": "lpc.scanFolder",
          "group": "LPC"
        },
        {
          "command": "lpc.compileFolder",
          "group": "LPC",
          "when": "explorerResourceIsFolder"
        }
      ],
      "editor/title": [
        {
          "command": "lpc.showFunctionDoc",
          "when": "resourceLangId == lpc",
          "group": "navigation"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "lpc-activitybar",
          "title": "LPC",
          "icon": "media/function-doc-dark.svg"
        }
      ]
    },
    "views": {
      "lpc-activitybar": [
        {
          "id": "lpcErrorTree",
          "name": "错误诊断中心",
          "type": "tree"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "LPC Support Configuration",
      "properties": {
        "lpc.driver.command": {
          "type": "string",
          "default": "",
          "description": "用于启动MUD驱动程序的命令。"
        },
        "lpc.includePath": {
          "type": "string",
          "default": "",
          "description": "LPC宏定义包含目录的路径"
        },
        "lpc.simulatedEfunsPath": {
          "type": "string",
          "default": "",
          "description": "LPC模拟函数库目录的路径"
        },
        "lpc.errorViewer.servers": {
          "type": "array",
          "default": [],
          "description": "配置错误查看器的服务器列表",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "服务器的名称"
              },
              "address": {
                "type": "string",
                "description": "服务器的地址 (例如 http://127.0.0.1:8092)"
              }
            }
          }
        },
        "lpc.enableApplyReturnCheck": {
          "type": "boolean",
          "default": true,
          "description": "启用 apply 函数返回类型匹配检查"
        },
        "lpc.enableUnusedGlobalVarCheck": {
          "type": "boolean",
          "default": true,
          "description": "启用未使用的全局变量检查"
        },
        "lpc.performance.debounceDelay": {
          "type": "number",
          "default": 300,
          "minimum": 100,
          "maximum": 2000,
          "description": "诊断防抖延迟时间（毫秒），较高的值可以减少CPU使用但增加响应延迟"
        },
        "lpc.performance.maxCacheSize": {
          "type": "number",
          "default": 50,
          "minimum": 10,
          "maximum": 200,
          "description": "解析缓存的最大文档数量"
        },
        "lpc.performance.maxCacheMemory": {
          "type": "number",
          "default": 5000000,
          "minimum": 1000000,
          "maximum": 50000000,
          "description": "解析缓存的最大内存使用量（字符数）"
        },
        "lpc.performance.enableAsyncDiagnostics": {
          "type": "boolean",
          "default": true,
          "description": "启用异步诊断处理，可以提高大文件的性能但可能略微增加内存使用"
        },
        "lpc.performance.batchSize": {
          "type": "number",
          "default": 50,
          "minimum": 10,
          "maximum": 200,
          "description": "异步处理时的批次大小，较小的值可以提高响应性但可能降低总体性能"
        },
        "lpc.glm4.apiKey": {
          "type": "string",
          "default": "",
          "description": "智谱AI GLM-4 API密钥，用于生成Javadoc注释"
        },
        "lpc.glm4.model": {
          "type": "string",
          "default": "GLM-4-Flash-250414",
          "description": "GLM-4模型类型，支持预设模型或自定义模型名称。预设模型包括: glm-4, glm-4-flash, glm-z1-flash, GLM-4.5-Flash, GLM-4-Flash-250414"
        },
        "lpc.glm4.allowCustomModel": {
          "type": "boolean",
          "default": true,
          "description": "允许用户在生成Javadoc时选择自定义模型"
        },
        "lpc.glm4.baseUrl": {
          "type": "string",
          "default": "https://open.bigmodel.cn/api/paas/v4",
          "description": "GLM-4 API基础URL"
        },
        "lpc.glm4.timeout": {
          "type": "number",
          "default": 30000,
          "minimum": 5000,
          "maximum": 120000,
          "description": "API请求超时时间（毫秒）"
        },
        "lpc.javadoc.enableAutoGeneration": {
          "type": "boolean",
          "default": true,
          "description": "启用自动生成Javadoc注释功能"
        },
        "lpc.glm4.alwaysShowModelSelector": {
          "type": "boolean",
          "default": false,
          "description": "每次生成Javadoc时都显示模型选择界面，关闭后将直接使用默认模型"
        },
        "lpc.glm4.rememberLastModel": {
          "type": "boolean",
          "default": true,
          "description": "记住上次选择的模型，下次生成时优先使用"
        },
        "lpc.glm4.lastSelectedModel": {
          "type": "string",
          "default": "",
          "description": "上次选择的模型名称（自动保存）"
        },
        "lpc.glm4.customModels": {
          "type": "array",
          "default": [],
          "description": "用户自定义的模型列表",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "模型显示名称"
              },
              "id": {
                "type": "string",
                "description": "模型ID"
              },
              "description": {
                "type": "string",
                "description": "模型描述"
              }
            },
            "required": ["name", "id"]
          }
        },
        "lpc.formatting.indentSize": {
          "type": "number",
          "default": 4,
          "minimum": 1,
          "maximum": 16,
          "description": "缩进大小（空格数或制表符数）"
        },
        "lpc.formatting.useSpaces": {
          "type": "boolean",
          "default": true,
          "description": "使用空格而非制表符缩进"
        },
        "lpc.formatting.insertFinalNewline": {
          "type": "boolean",
          "default": true,
          "description": "在文件末尾插入换行符"
        },
        "lpc.formatting.trimTrailingWhitespace": {
          "type": "boolean",
          "default": true,
          "description": "移除行尾的空白字符"
        },
        "lpc.formatting.maxLineLength": {
          "type": "number",
          "default": 120,
          "minimum": 40,
          "maximum": 300,
          "description": "最大行长度"
        },
        "lpc.formatting.spaceAroundOperators": {
          "type": "boolean",
          "default": true,
          "description": "在操作符周围添加空格"
        },
        "lpc.formatting.spaceAfterComma": {
          "type": "boolean",
          "default": true,
          "description": "在逗号后添加空格"
        },
        "lpc.formatting.spaceAfterSemicolon": {
          "type": "boolean",
          "default": true,
          "description": "在分号后添加空格（仅适用于for循环）"
        },
        "lpc.formatting.spaceBeforeOpenParen": {
          "type": "boolean",
          "default": false,
          "description": "在左括号前添加空格"
        },
        "lpc.formatting.spaceInsideParentheses": {
          "type": "boolean",
          "default": false,
          "description": "在括号内添加空格"
        },
        "lpc.formatting.spaceInsideBraces": {
          "type": "boolean",
          "default": true,
          "description": "在花括号内添加空格"
        },
        "lpc.formatting.spaceInsideBrackets": {
          "type": "boolean",
          "default": false,
          "description": "在方括号内添加空格"
        },
        "lpc.formatting.alignParameters": {
          "type": "boolean",
          "default": true,
          "description": "对齐函数参数"
        },
        "lpc.formatting.alignArguments": {
          "type": "boolean",
          "default": false,
          "description": "对齐函数调用参数"
        },
        "lpc.formatting.newlineBeforeOpenBrace": {
          "type": "boolean",
          "default": false,
          "description": "在左花括号前换行"
        },
        "lpc.formatting.newlineAfterOpenBrace": {
          "type": "boolean",
          "default": true,
          "description": "在左花括号后换行"
        },
        "lpc.formatting.newlineBeforeCloseBrace": {
          "type": "boolean",
          "default": true,
          "description": "在右花括号前换行"
        },
        "lpc.formatting.formatFunctionPointers": {
          "type": "boolean",
          "default": true,
          "description": "格式化LPC函数指针语法"
        },
        "lpc.formatting.formatMappings": {
          "type": "boolean",
          "default": true,
          "description": "格式化LPC映射语法"
        },
        "lpc.formatting.formatArrays": {
          "type": "boolean",
          "default": true,
          "description": "格式化LPC数组语法"
        },
        "lpc.formatting.preserveComments": {
          "type": "boolean",
          "default": true,
          "description": "保持注释格式"
        },
        "lpc.formatting.functionCallStyle": {
          "type": "string",
          "enum": ["compact", "expanded"],
          "default": "compact",
          "description": "函数调用格式风格"
        },
        "lpc.formatting.functionDefStyle": {
          "type": "string",
          "enum": ["compact", "expanded"],
          "default": "expanded",
          "description": "函数定义格式风格"
        },
        "lpc.formatting.controlStructureStyle": {
          "type": "string",
          "enum": ["compact", "expanded"],
          "default": "compact",
          "description": "控制结构格式风格"
        },
        "lpc.formatting.enableIncrementalFormatting": {
          "type": "boolean",
          "default": true,
          "description": "启用增量格式化（仅格式化变更的部分）"
        },
        "lpc.formatting.enableParallelProcessing": {
          "type": "boolean",
          "default": false,
          "description": "启用并行处理（实验性功能）"
        },
        "lpc.formatting.maxFormatTime": {
          "type": "number",
          "default": 5000,
          "minimum": 1000,
          "maximum": 30000,
          "description": "最大格式化时间（毫秒）"
        },
        "lpc.formatting.spaceAfterKeywords": {
          "type": "boolean",
          "default": true,
          "description": "在关键字（foreach、if、while等）后添加空格"
        },
        "lpc.formatting.spaceBeforeOpenBrace": {
          "type": "boolean",
          "default": true,
          "description": "在左大括号前添加空格"
        },
        "lpc.formatting.spaceAfterCast": {
          "type": "boolean",
          "default": true,
          "description": "在类型转换后添加空格"
        },
        "lpc.formatting.formatSwitchRanges": {
          "type": "boolean",
          "default": true,
          "description": "格式化switch范围匹配语法（case x..y:）"
        },
        "lpc.formatting.formatForeachRef": {
          "type": "boolean",
          "default": true,
          "description": "格式化foreach ref语法"
        },
        "lpc.formatting.formatAnonymousFunctions": {
          "type": "boolean",
          "default": true,
          "description": "格式化匿名函数"
        },
        "lpc.formatting.formatExpressionPointers": {
          "type": "boolean",
          "default": true,
          "description": "格式化表达式函数指针（(: expression :)）"
        },
        "lpc.formatting.formatVarargs": {
          "type": "boolean",
          "default": true,
          "description": "格式化变长参数函数（void test(mixed *x...)）"
        },
        "lpc.formatting.formatDefaultParameters": {
          "type": "boolean",
          "default": true,
          "description": "格式化默认参数语法"
        },
        "lpc.formatting.formatRangeOperations": {
          "type": "boolean",
          "default": true,
          "description": "格式化范围操作语法（str[start..end]）"
        },
        "lpc.formatting.formatNewExpressions": {
          "type": "boolean",
          "default": true,
          "description": "格式化new表达式"
        },
        "lpc.formatting.formatCastExpressions": {
          "type": "boolean",
          "default": true,
          "description": "格式化类型转换表达式"
        }
      }
    },
    "keybindings": [
      {
        "command": "editor.action.commentLine",
        "key": "ctrl+/",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'lpc'"
      },
      {
        "command": "editor.action.blockComment",
        "key": "shift+alt+a",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'lpc'"
      },
      {
        "command": "lpc.compileFile",
        "key": "ctrl+f5",
        "when": "editorTextFocus && editorLangId == 'lpc'"
      },
    ],
    "semanticTokenTypes": [
      {
        "id": "keyword",
        "description": "关键字"
      },
      {
        "id": "type",
        "description": "类型关键字"
      },
      {
        "id": "variable",
        "description": "变量"
      },
      {
        "id": "function",
        "description": "函数名"
      },
      {
        "id": "property",
        "description": "成员/属性"
      },
      {
        "id": "macro",
        "description": "宏或常量"
      },
      {
        "id": "number",
        "description": "数字"
      },
      {
        "id": "string",
        "description": "字符串"
      },
      {
        "id": "comment",
        "description": "注释"
      },
      {
        "id": "operator",
        "description": "运算符"
      },
      {
        "id": "builtin",
        "description": "内置函数"
      }
    ],
    "semanticTokenModifiers": []
  },
  "scripts": {
    "vscode:prepublish": "cross-env NODE_ENV=production npm run build",
    "build": "npm run generate-parser && node esbuild.mjs",
    "build:dev": "cross-env NODE_ENV=development npm run build",
    "watch": "cross-env NODE_ENV=development node esbuild.mjs --watch",
    "generate-parser": "antlr4ts -visitor -no-listener -o src/antlr grammar/LPCLexer.g4 grammar/LPCParser.g4",
    "package": "npm run clean && npm run build && vsce package",
    "clean": "rimraf dist out",
    "analyze": "cross-env NODE_ENV=development npm run build -- --analyze",
    "test": "jest",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "test:e2e": "jest --testPathPattern=e2e",
    "test:coverage": "jest --coverage",
    "test:watch": "jest --watch",
    "test:performance": "jest --testPathPattern=performance"
  },
  "license": "MIT",
  "icon": "icon.png",
  "files": [
    "dist/**",
    "syntaxes/**",
    "snippets/**",
    "media/**",
    "language-configuration.json",
    "config/**"
  ]
}